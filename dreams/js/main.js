function onScroll(){var e=$(document).scrollTop();$(menu_selector+" a").each(function(){var t=$(this).attr("href"),a=$(t);a.position().top<=e&&a.position().top+a.outerHeight()>e?($(menu_selector+" a.active-link").removeClass("active-link"),$(this).addClass("active-link")):$(this).removeClass("active-link")})}var navMain=document.querySelector(".menu"),navToggle=document.querySelector(".menu__toggle");navMain.classList.remove("menu_nojs"),navToggle.addEventListener("click",function(){navMain.classList.contains("menu_closed")?(navMain.classList.remove("menu_closed"),navMain.classList.add("menu_opened")):(navMain.classList.add("menu_closed"),navMain.classList.remove("menu_opened"))}),$(window).scroll(function(){var e=$(document).scrollTop();e>100?($(".fix-menu").addClass("fix-menu_fixed"),$(".chief").addClass("chief_indent"),$("#first").removeClass("active-link_home")):($(".fix-menu").removeClass("fix-menu_fixed"),$(".chief").removeClass("chief_indent"),$("#first").removeClass("active-link"),$("#first").addClass("active-link_home"))});var menu_selector=".menu";$(document).ready(function(){$(document).on("scroll",onScroll),$("a[href^=\\#]").click(function(e){e.preventDefault(),$(document).off("scroll"),$(menu_selector+" a.active-link").removeClass("active-link"),$(this).addClass("active-link");var t=$(this).attr("href"),a=$(t);$("html, body").animate({scrollTop:a.offset().top},500,function(){window.location.hash=t,$(document).on("scroll",onScroll)})})}),$(document).ready(function(){function e(e){e.validate({rules:{Email:{required:!0,email:!0},"Имя":{required:!0},"Сообщение":{required:!0}},messages:{Email:{required:"Поле обязательно для заполнения",email:"Неверный формат E-mail"},"Имя":{required:"Поле обязательно для заполнения"},"Сообщение":{required:"Поле обязательно для заполнения"}},submitHandler:function(e){var t=$(e),a=$(e).attr("id");switch(a){case"goToNewPage":$.ajax({type:"POST",url:t.attr("action"),data:t.serialize()}).always(function(e){ga("send","event","masterklass7","register"),yaCounter27714603.reachGoal("lm17lead")});break;case"popupResult":$.ajax({type:"POST",url:t.attr("action"),data:t.serialize()}).always(function(e){setTimeout(function(){$("#overlay").fadeIn(),$("#popup").fadeIn(),t.trigger("reset")},1100),$("#overlay, #close").on("click",function(e){$("#overlay").fadeOut(),$("#popup").fadeOut()})})}return!1}})}$("[data-submit]").on("click",function(e){e.preventDefault(),$(this).parent("form").submit()}),$.validator.addMethod("regex",function(e,t,a){var n=new RegExp(a);return this.optional(t)||n.test(e)},"Пожалуйста, проверьте свои данные"),$(".invite").each(function(){e($(this))}),$("[data-scroll]").on("click",function(){$("html, body").animate({scrollTop:$($.attr(this,"data-scroll")).offset().top},2e3),event.preventDefault()})}),$(document).ready(function(){$(document).click(function(e){setTimeout(function(){$("label").fadeOut(),e.stopPropagation()},4100)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
