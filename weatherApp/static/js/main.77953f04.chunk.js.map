{"version":3,"sources":["components/Search.js","components/Period.js","components/Date.js","constants.js","components/List.js","components/WeatherApp.js","index.js"],"names":["Search","_this$props","this","props","city","handleInput","submitAction","react_default","a","createElement","onSubmit","className","htmlFor","type","id","placeholder","onChange","value","onBlur","React","Component","Period","name","handleRadio","checked","period","Dates","today","Date","periodDate","todayDay","getDate","todayMonth","getMonth","todayYear","getFullYear","concat","setDate","day","month","year","API_KEY","ENDPOINTS","getWeather","getImg","icon","List","_this$props$weather","weather","temperature","map","item","index","key","toFixed","src","alt","description","_this$props$weather2","length","renderWeather","renderEmptyMessage","WeatherApp","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","searchHandler","event","target","setState","periodHandler","fetchWeather","preventDefault","state","successFetch","fetch","then","response","ok","Promise","reject","json","_ref","list","main","temp","_ref2","catch","e","console","log","_this$state","components_Search","components_Period","components_Date","components_List","ReactDOM","render","components_WeatherApp","document","getElementById"],"mappings":"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","file":"static/js/main.77953f04.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Search extends React.Component {\r\n    render() {\r\n        const {city, handleInput, submitAction} = this.props;\r\n        \r\n        return (\r\n            \r\n            <form onSubmit={submitAction}>\r\n                <h1 className=\"alert alert-success\">Weather in {city} â˜º</h1>\r\n                <div className=\"form-group row justify-content-center align-items-center search\">\r\n                    <label htmlFor=\"city\" className=\"col-form-label label\">City:</label>\r\n                    <div className=\"col-sm-2\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control input\" \r\n                            id=\"city\" \r\n                            placeholder=\"City\"\r\n                            onChange={handleInput}\r\n                            value={city}\r\n                            onBlur={submitAction}\r\n                        />\r\n                    </div>\r\n                    <button className=\"btn btn-primary\">Fetch</button>\r\n                </div>\r\n                \r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\n\r\nclass Period extends React.Component {\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"period\"> \r\n                <h3 className=\"text-center\">Please select period of weather</h3>\r\n                <div className=\"period__list\">\r\n                    <div className=\"custom-control custom-radio period__item\">\r\n                        <input \r\n                            type=\"radio\" \r\n                            id=\"period1\" \r\n                            name=\"period\"\r\n                            value=\"1\" \r\n                            className=\"custom-control-input\"\r\n                            onChange={this.props.handleRadio}\r\n                            checked={this.props.period === '1'} \r\n                        />\r\n                        <label className=\"custom-control-label\" htmlFor=\"period1\">Now</label>\r\n                    </div>\r\n                    <div className=\"custom-control custom-radio period__item\">\r\n                        <input \r\n                            type=\"radio\" \r\n                            id=\"period2\" \r\n                            name=\"period\"\r\n                            value=\"3\" \r\n                            className=\"custom-control-input\"\r\n                            onChange={this.props.handleRadio} \r\n                        />\r\n                        <label className=\"custom-control-label\" htmlFor=\"period2\">3 days</label>\r\n                    </div>\r\n                    <div className=\"custom-control custom-radio period__item\">\r\n                        <input \r\n                            type=\"radio\" \r\n                            id=\"period3\" \r\n                            name=\"period\"\r\n                            value=\"7\" \r\n                            className=\"custom-control-input\"\r\n                            onChange={this.props.handleRadio} \r\n                        />\r\n                        <label className=\"custom-control-label\" htmlFor=\"period3\">7 days</label>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Period;","import React from 'react';\r\n\r\nclass Dates extends React.Component {\r\n\r\n    render() {\r\n        let today = new Date(),\r\n            periodDate =  new Date();\r\n\r\n        let todayDay = today.getDate(),\r\n            todayMonth = today.getMonth() + 1,\r\n            todayYear = today.getFullYear();\r\n\r\n        switch(this.props.period) {\r\n            case '1':\r\n                return (\r\n                    <div className=\"dates\">\r\n                        <div className=\"text-center alert alert-warning\">\r\n                            {`${todayDay > 9 ? todayDay : '0' + todayDay}.${todayMonth > 9 ? todayMonth : '0' + todayMonth}.${todayYear}`}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            case '3':\r\n                periodDate.setDate(periodDate.getDate() + 3);\r\n                break;\r\n            case '7':\r\n                periodDate.setDate(periodDate.getDate() + 7);\r\n                break;\r\n            default: \r\n                break;\r\n        }\r\n\r\n        let day = periodDate.getDate(),\r\n            month = periodDate.getMonth() + 1,\r\n            year = periodDate.getFullYear();\r\n\r\n        return (\r\n            <div className=\"dates\">\r\n                <div className=\"text-center alert alert-warning\">\r\n                    {`${todayDay > 9 ? todayDay : '0' + todayDay}.${todayMonth > 9 ? todayMonth : '0' + todayMonth}.${todayYear} `}\r\n                    -\r\n                    {` ${day > 9 ? day : '0' + day}.${month > 9 ? month : '0' + month}.${year}`}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dates;","// const API_KEY = '5fc25e476088453a4b4f90814b3c0815';\r\nconst API_KEY = '3c3674a3c13a0084561b70150037e575';\r\n\r\nconst ENDPOINTS = {\r\n    getWeather(city, period) {\r\n        return period === '1' \r\n            ? `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`\r\n            : `http://api.openweathermap.org/data/2.5/forecast/daily?q=${city}&mode=json&cnt=${period}&appid=${API_KEY}`;\r\n    },\r\n    getImg(icon) {\r\n        return `http://openweathermap.org/img/w/${icon}.png`;\r\n    }\r\n}\r\n\r\nexport {ENDPOINTS};\r\n\r\n// export default ENDPOINTS;","import React from 'react';\r\nimport {ENDPOINTS} from '../constants';\r\n\r\nfunction toCelsius(kelvin) {\r\n    let celsius = kelvin - 273.15;\r\n    return celsius.toFixed(1);\r\n}\r\n\r\nclass List extends React.Component {\r\n\r\n    renderEmptyMessage() {\r\n        return (\r\n            <div>\r\n                The search did not give results\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderWeather() {\r\n        const {weather = [], temperature} = this.props;\r\n\r\n        return (\r\n            <ul className=\"list\">\r\n                {weather.map((item, index) => (\r\n                    <div key={index+1} className=\"list__item\">\r\n                        <span className=\"temperature\">{toCelsius(temperature[index])}</span>\r\n                        <span className=\"celsius\"><sup> 0</sup>C</span>\r\n                        <img src={ENDPOINTS.getImg(item.icon)} alt=\"\" className=\"list__img\"/>\r\n                        <span>{item.description}</span>\r\n                    </div> \r\n                    )\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {weather = []} = this.props;\r\n\r\n        return (\r\n            <div className=\"list\">\r\n                {weather.length > 0\r\n                    ? this.renderWeather() \r\n                    : this.renderEmptyMessage()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default List;","import React from 'react';\r\nimport Search from './Search';\r\nimport Period from './Period';\r\nimport Dates from './Date';\r\nimport List from './List';\r\nimport {ENDPOINTS} from '../constants';\r\n\r\nclass WeatherApp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            weather: [],\r\n            temperature: [],\r\n            successFetch: false,\r\n            city: 'Kyiv',\r\n            period: '1'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchWeather();\r\n    }\r\n\r\n    searchHandler = event => {\r\n        const {value: city} = event.target;\r\n        this.setState({city});\r\n    }\r\n\r\n    periodHandler = event => {\r\n        const {value: period} = event.target;\r\n        this.setState({period}, () => {\r\n            this.fetchWeather();\r\n        });\r\n    }\r\n\r\n    fetchWeather = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (this.state.city === '') {\r\n            this.setState({weather: [], successFetch: true})\r\n            return;\r\n        }\r\n\r\n        this.setState({successFetch: false});\r\n\r\n        fetch(ENDPOINTS.getWeather(this.state.city, this.state.period))\r\n            .then(response => response.ok ? response : Promise.reject('Not found weather'))\r\n            .then(response => response.json())\r\n            .then(({list, weather, main}) => {\r\n                if(list) {\r\n                    return {\r\n                        weather: list.map( item => {\r\n                            return item.weather[0];\r\n                            }),\r\n                        temperature: list.map( item => {\r\n                            return item.temp.day;\r\n                        })\r\n                    }\r\n                } else if (weather) {\r\n                    return {\r\n                        weather: weather,\r\n                        temperature: [main.temp]\r\n                    }\r\n                }\r\n            })\r\n            // .then(result => console.log(result))\r\n            .then(({weather, temperature}) => this.setState({weather, temperature, successFetch: true}))\r\n            .catch(e => {\r\n                this.setState({weather: [], successFetch: true})\r\n                console.log(e)\r\n            }); // Not found weather\r\n    }\r\n\r\n    render() {\r\n        const {weather, successFetch, city, temperature, period} = this.state;\r\n\r\n        return (\r\n            <div className=\"weather-app\">\r\n                <Search\r\n                    city={city}\r\n                    submitAction={this.fetchWeather}\r\n                    handleInput={this.searchHandler}\r\n                />\r\n                <div className=\"weather-app__content\">\r\n                    <Period\r\n                        handleRadio={this.periodHandler}\r\n                        period={period}\r\n                    />\r\n                    {successFetch\r\n                        ? <div>\r\n                            <Dates \r\n                                period={period} />\r\n                            <List \r\n                                weather={weather} \r\n                                temperature={temperature} />\r\n                            </div>\r\n                          \r\n                        : <div className=\"text-center\">Loading...</div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WeatherApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport WeatherApp from './components/WeatherApp';\r\nimport './styles/bootstrap.min.css';\r\nimport './styles/styles.css';\r\n\r\nReactDOM.render(\r\n    <WeatherApp />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}